{{- range $key, $value := .Values.deployments }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $key }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $key }}
    name: {{$key }}
    app: {{ $key }}
  {{- with $value.annotations }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ $value.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ $key }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      namespace: {{ $.Release.Namespace }}
      labels:
        app: {{ $key }}
        app.kubernetes.io/name: {{ $key }}
        name: {{$key }}
      {{- with $value.template }}
      {{- with .annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
    spec:
      restartPolicy: Always
      {{- with $value.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ $key }}
        image: {{ $value.image }}
        imagePullPolicy: {{ $value.imagePullPolicy | default "IfNotPresent" }}
        {{- with $value.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $value.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $value.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $value.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $value.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $value.envSecret }}
        envFrom:
        - secretRef:
            name: {{ . }}
        {{- end }}
        {{- with $value.volumeMounts }}
        volumeMounts:
        {{- range $volumePath, $volumeVal := . }}
        - mountPath: {{ $volumePath }}
          readOnly: {{ $volumeVal.readOnly }}
          {{- if $volumeVal.configMap }}
          name: {{ $volumeVal.configMap }}
          {{- else if $volumeVal.secret }}
          name: {{ $volumeVal.secret }}
          {{- else if $volumeVal.persistentVolumeClaim }}
          name: {{ $volumeVal.persistentVolumeClaim }}
          {{- else }}
          name: single-empty-dir-name
          {{- end }}
        {{- end }}
        {{- end }}
        {{- with $value.ports }}
        ports:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with $value.volumeMounts }}
      volumes:
      {{- range $volumePath, $volumeVal := . }}
      {{- if $volumeVal.configMap }}
      - name: {{ $volumeVal.configMap }}
        configMap:
          name: {{ $volumeVal.configMap }}
      {{- else if $volumeVal.secret }}
      - name: {{ $volumeVal.secret }}
        secret:
          secretName: {{ $volumeVal.secret }}
      {{- else if $volumeVal.persistentVolumeClaim }}
      - name: {{ $volumeVal.persistentVolumeClaim }}
        persistentVolumeClaim:
          claimName: {{ $volumeVal.persistentVolumeClaim }}
      {{- else }}
      - name: single-empty-dir-name
        emptyDir:
      {{- end }}
      {{- end }}
      {{- end }}
---
{{- end }}
